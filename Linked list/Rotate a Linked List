Given the head of a singly linked list, your task is to left rotate the linked list k times.

Examples:

Input: head = 10 -> 20 -> 30 -> 40 -> 50, k = 4
Output: 50 -> 10 -> 20 -> 30 -> 40
Explanation:
Rotate 1: 20 -> 30 -> 40 -> 50 -> 10
Rotate 2: 30 -> 40 -> 50 -> 10 -> 20
Rotate 3: 40 -> 50 -> 10 -> 20 -> 30
Rotate 4: 50 -> 10 -> 20 -> 30 -> 40


class Solution {
    public Node rotate(Node head, int k) {
        if(k==0 || head==null){
            return head;
        }
        int count=1;
        Node ptr =head;
        while(ptr.next!=null){
            ptr=ptr.next;
            count++;
        }
        k=k%count;
        if(k==0){
            return head;
        }
        ptr.next=head;
        ptr=head;
        int i=1;
        while(i<k){
            ptr=ptr.next;
            i++;
        }
        head=ptr.next;
        ptr.next=null;
            
        return head;
        
    }
}
