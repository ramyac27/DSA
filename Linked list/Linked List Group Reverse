Given the head a linked list, the task is to reverse every k node in the linked list. If the number of nodes is not a multiple of k then the left-out nodes in the end, should be considered as a group and must be reversed.

Examples:

Input: head = 1 -> 2 -> 2 -> 4 -> 5 -> 6 -> 7 -> 8, k = 4
Output: 4 -> 2 -> 2 -> 1 -> 8 -> 7 -> 6 -> 5


class Solution {
    public static Node reverseKGroup(Node head, int k) {
        int[] arr= new int[1000000];
        Node temp=head;
        while(temp!=null){
            int x=0;
            Node temp1=temp;
            while(x<k && temp!=null){
               arr[x]=temp.data;
               x++;
               temp=temp.next;
            }
            x--;
        
           while(x>=0){
            temp1.data=arr[x];
            temp1=temp1.next;
            x--;
           }
        
        }
        return head;
        
    }
}
