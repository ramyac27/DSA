Given a head singly linked list of positive integers. The task is to check if the given linked list is palindrome or not.

Examples:

Input: head: 1 -> 2 -> 1 -> 1 -> 2 -> 1
Output: true
Explanation: The given linked list is 1 -> 2 -> 1 -> 1 -> 2 -> 1 , which is a palindrome and Hence, the output is true.


class Solution {
    // Function to check whether the list is palindrome.
    static Node reverse(Node head){
        Node curr=head;
        Node temp=null;
        Node new_node=null;
        while(curr!=null){
            new_node=curr.next;
            curr.next=temp;
            temp=curr;
            curr=new_node;
        }
        head=temp;
        return head;
    }
    static boolean checkpalindrome(Node head,Node head1){
        while(head!=null && head1!=null){
            if(head.data!=head1.data){
                return false;
            }
            head=head.next;
            head1=head1.next;
        }
        return true;
    }
    static boolean isPalindrome(Node head) {
        Node temp,temp1;
        temp=head;
        temp1=head.next;
        while(temp1!=null && temp1.next!=null){
            temp=temp.next;
            temp1=temp1.next.next;
        }
        Node temp2=temp.next;
        
        temp.next=null;
        Node newhead=reverse(temp2);
        return checkpalindrome(head,newhead);
       
    }
}
