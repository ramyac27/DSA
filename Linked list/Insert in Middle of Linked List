Given the head of a Singly Linked List and a value x. The task is to insert the key in the middle of the linked list.

Examples :

Input: LinkedList = 1->2->4 , x = 3
Output: 1->2->3->4
Explanation: 

The new element is inserted after the current middle element in the linked list.
Input: LinkedList = 10->20->40->50 , x = 30
Output: 10->20->30->40->50
Explanation: 

The new element is inserted after the current middle element in the linked list and Hence, the output is 10->20->30->40->50.


class Solution {
    int getMiddle(Node head) {
        Node temp =head;
        int count=0;
        while(temp!=null){
            temp=temp.next;
            count++;
        }
    count=(count/2)+1;
    int count1=0;
    temp=head;
    Node curr=null;
    while(temp!=null && count1!=count){
        curr=temp;
        temp=temp.next;
        count1++;
    }
    return curr.data;
    }
}


class Solution {
    public Node insertInMiddle(Node head, int x) {
        if(head==null){
            return new Node(x);
        }
        Node temp= head;
        Node temp1=head;
        while(temp1.next !=null && temp1.next.next!=null){
            temp1=temp1.next.next;
            temp=temp.next;
        }
        Node new_node =new Node(x);
        new_node.next=temp.next;
        temp.next=new_node;
        
        return head;
    }
}
