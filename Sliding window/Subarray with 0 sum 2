Given an array of integers, arr[]. Find if there is a subarray (of size at least one) with 0 sum. Return true/false depending upon whether there is a subarray present with 0-sum or not. Input: arr[] = [4, 2, -3, 1, 6] Output: true Explanation: 2, -3, 1 is the subarray with a sum of 0.

Input Format

n=5 arr[] = [4, 2, -3, 1, 6]

Constraints

1 <= arr.size <= 1000

Output Format

true

Sample Input 0

5
4 2 -3 1 6
Sample Output 0

true
Sample Input 1

5
3 4 5 1 3
Sample Output 1

false



import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            arr[i]=scanner.nextInt();
        }
        
        HashSet<Integer> result = new HashSet<>();
        
        int j=0;
        int sum=0;
        int flag=0;
        
        while(j<n){
            if(arr[j]==0){
                flag=1;
            }
            sum=sum+arr[j];
            
            if(sum==0){
                flag=1;
            }
            else{
                if(result.contains(sum)){
                    flag=1;
                    break;
                }
                else{
                    j++;
                }
                result.add(sum);
            }
        }
        
        if(flag==1){
            System.out.print(true);
        }
        else{
            System.out.print(false);
        }
        
    }
}
