Given an array of integers arr[]  and a number k. Return the maximum sum of a subarray of size k.

Note: A subarray is a contiguous part of any given array.

Examples:

Input: arr[] = [100, 200, 300, 400] , k = 2
Output: 700
Explanation: arr3  + arr4 = 700, which is maximum.

Input: arr[] = [100, 200, 300, 400] , k = 4
Output: 1000
Explanation: arr1 + arr2 + arr3 + arr4 = 1000, which is maximum.

Input: arr[] = [100, 200, 300, 400] , k = 1
Output: 400
Explanation: arr4 = 400, which is maximum.

class Solution {
    public int maximumSumSubarray(int[] arr, int k) {
        int n = arr.length;
        int i =0;
        int j=0;
        int sum=0;
        int maxsum=0;
        
        while(j<n){
            if(j-i+1<k){
                sum=sum+arr[j];
                j++;
            }
            else{
                sum =sum+arr[j];
                if(sum>maxsum){
                    maxsum=sum;
                }
                sum=sum-arr[i];
                i++;
                j++;
            }
        }
        return maxsum;
    }
}
