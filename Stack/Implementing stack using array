class Mystack{
	int maxsize;
	int[] StackArray;
	int top;


public Mystack(int size) {
	this.maxsize=size;
	this.StackArray = new int[size];
	this.top=-1;
   }


public boolean isEmpty() {
	return top==-1;
}

public boolean isFull() {
	return top ==maxsize-1;
}

public void push(int value) {
	if(isFull()) {
		System.out.println("Stack overflow");
		return;
	}
	else {
		StackArray[++top]=value;
	}
}

public int pop(){
	if(isEmpty()) {
		System.out.println("stack underflow");
		return -1;
	}
	else {
		return StackArray[top--];
	}
}

public int peek() {
	return StackArray[top];
}

public void display() {
	if(isEmpty()) {
		System.out.println("Stack is empty");
		return;
	}
	else {
		for(int i=0;i<=top;i++) {
			System.out.println(StackArray[i]);
		}
	}
	System.out.println();
}

}

public class main{
	public static void main(String[] args) {
		Mystack stack = new Mystack(5);
		
		stack.push(10);
		stack.push(20);
		stack.push(30);
		stack.push(40);
		stack.push(50);
		
		stack.pop();
		stack.pop();
		
		System.out.println(stack.isEmpty());
		
		System.out.println(stack.isFull());
		
		System.out.println(stack.peek());
		
		stack.display();
	}
}

O/P = 
false
false
30
10
20
30
