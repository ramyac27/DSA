https://www.geeksforgeeks.org/problems/left-view-of-binary-tree/1

Left View of Binary Tree

You are given the root of a binary tree. Your task is to return the left view of the binary tree. The left view of a binary tree is the set of nodes visible when the tree is viewed from the left side.

If the tree is empty, return an empty list.

Examples :

Input: root[] = [1, 2, 3, 4, 5, N, N]

Output: [1, 2, 4]
Explanation: From the left side of the tree, only the nodes 1, 2, and 4 are visible.

Input: root[] = [1, 2, 3, N, N, 4, N, N, 5, N, N]

Output: [1, 2, 4, 5]
Explanation: From the left side of the tree, the nodes 1, 2, 4, and 5 are visible.

Input: root[] = [N]
Output: []


class Solution {
    // Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root) {
       ArrayList<Integer> ans = new ArrayList<>();
       Queue<Node> q = new LinkedList<>();
       q.add(root);
       if(root==null){
           return ans;
       }
       while(!q.isEmpty()){
           int size = q.size();
           for(int i=0;i<size;i++){
               if(i==0){
                   Node temp_ans= q.peek();
                   ans.add(temp_ans.data);
               }
               Node temp = q.poll();
               if(temp.left!=null){
                   q.add(temp.left);
               }
               if(temp.right!=null){
                   q.add(temp.right);
               }
           }
       }
        
       return ans;
    }
}
