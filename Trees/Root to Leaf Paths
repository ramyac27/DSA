https://www.geeksforgeeks.org/problems/root-to-leaf-paths/1

Root to Leaf Paths

Given a Binary Tree, you need to find all the possible paths from the root node to all the leaf nodes of the binary tree.

Note: The paths should be returned such that paths from the left subtree of any node are listed first, followed by paths from the right subtree.

class Solution {
    public static void getpath(Node root, ArrayList<ArrayList<Integer>> result,ArrayList<Integer>ans){
        if (root==null){
            return;
        }
        if(root.left==null && root.right==null){
            ans.add(root.data);
            ArrayList<Integer> temp = new ArrayList<>(ans);
            result.add(temp);
            ans.remove(ans.size()-1);
        }
        ans.add(root.data);
        getpath(root.left,result,ans);
        getpath(root.right,result,ans);
        ans.remove(ans.size()-1);
    }
    public static ArrayList<ArrayList<Integer>> Paths(Node root) {
        ArrayList<ArrayList<Integer>> result = new ArrayList();
        ArrayList<Integer> ans = new ArrayList();
        getpath(root,result,ans);
        return result;
        
    }
}
